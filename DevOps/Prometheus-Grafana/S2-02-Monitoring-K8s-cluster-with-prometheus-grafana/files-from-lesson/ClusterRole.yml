apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  - configmaps
  verbs: ["get", "list", "watch"]
- apiGroups: # ingresses farki bir apiGroup'a sahip oldugu icin burada ikinci bir kisim olusturarak tanimliyorum
  - networking.k8s.io
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"] 
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus # ClusterRole'un ismini yaziyoruz
subjects:
- kind: ServiceAccount  # prometheus bir servis oldugundan serviceAccount yaziyoruz
  name: default
  namespace: prometheus
